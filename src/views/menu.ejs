<!doctype html>
<html lang="en">

<head>
  <title>Defac Menu</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

  <!-- google fonts -->
  <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css?family=Josefin+Sans:400,700" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css?family=Great+Vibes" rel="stylesheet" />

  <!-- bootstrap css -->
  <link rel="stylesheet" href="assets/css/open-iconic-bootstrap.min.css" />
  <!-- animate css -->
  <link rel="stylesheet" href="assets/css/animate.css" />

  <!-- owl carasoul css -->
  <link rel="stylesheet" href="assets/css/owl.carousel.min.css" />
  <link rel="stylesheet" href="assets/css/owl.theme.default.min.css" />
  <!-- magnific-popup css -->
  <link rel="stylesheet" href="assets/css/magnific-popup.css" />

  <!-- aos js css -->
  <link rel="stylesheet" href="assets/css/aos.css" />

  <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

  <!-- swiper css  -->
  <link rel="stylesheet" href="https://md-aqil.github.io/images/swiper.min.css" />

  <!-- ionicon css -->
  <link rel="stylesheet" href="assets/css/ionicons.min.css" />

  <!-- bootstrapdate picker and time picker -->
  <link rel="stylesheet" href="assets/css/bootstrap-datepicker.css" />
  <link rel="stylesheet" href="assets/css/jquery.timepicker.css" />

  <!-- flaticon css -->
  <link rel="stylesheet" href="assets/css/flaticon.css" />
  <!-- icomoon icon css -->
  <link rel="stylesheet" href="assets/css/icomoon.css" />

  <!-- star rating -->
  <link rel="stylesheet" href="assets/css/star-rating.css" />
  <!-- custom css -->
  <link rel="stylesheet" href="assets/css/style.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>


  <%- include('partials/auth-check') %>
</head>

<body>
  <%- include('partials/soldier-nav') %>
    <!-- END nav -->

    <!-- sub banner of the page here  -->
    <section class="menu-banner">
      <div class="slider-item" style="background-image: url(assets/images/burger-1.jpg)"
        data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="container">
          <div class="row slider-text justify-content-center align-items-center">
            <div class="col-md-7 col-sm-12 text-center ftco-animate">
              <h1 class="mb-3 mt-5 bread">Our Menu</h1>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- <section class="home-slider sub-banner">
	<div
	  class="slider-item"
	  style="background-image: url(assets/images/burger-1.jpg)"
	  data-stellar-background-ratio="0.5">
	  <div class="overlay"></div>
	  <div class="container">
		<div class="row slider-text justify-content-center align-items-center">
		  <div class="col-md-7 col-sm-12 text-center ftco-animate">
			<h1 class="mb-3 mt-5 bread">Our Menu</h1>
		  </div>
		</div>
	  </div>
	</div>
  </section> -->
    <!-- sub banner of the page here  -->

    <section class="ftco-intro">
      <div class="container-wrap">
        <div class="wrap d-md-flex align-items-xl-end">
          <div class="info">
            <div class="row no-gutters">
              <div class="col-md-4 d-flex ftco-animate fadeInUp ftco-animated">
                <div class="icon">
                  <span class="icon-phone"><i class="fa-solid fa-phone"></i></span>
                </div>
                <div class="text">
                  <h3>Contact Us</h3>
                  <p id="contact"></p>
                </div>
              </div>
              <div class="col-md-4 d-flex ftco-animate fadeInUp ftco-animated">
                <div class="icon"><span class="icon-my_location"></span></div>
                <div class="text">
                  <h3>Our Address</h3>
                  <p id="address"></p>
                </div>
              </div>
              <div class="col-md-4 d-flex ftco-animate fadeInUp ftco-animated">
                <div class="icon"><span class="icon-clock-o"></span></div>
                <div class="text">
                  <h3>Opening Hours</h3>
                  <p id="opening-hour"></p>
                </div>
              </div>
            </div>
          </div>
          <!-- <div class="book p-4">
	    			<img src="assets/images/event-2.jpg" alt="">
	    		</div> -->
        </div>
      </div>
    </section>

    <!-- Button to trigger the modal -->
    <!-- Modal for editing the menu before adding to the cart -->
    <div class="modal fade" id="myModal-add-cart" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <div class="d-block">
              <h4 class="modal-title" id="myModalLabel"></h4>
            </div>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">Ã—</span>
            </button>
          </div>
          <div class="modal-body">
            <div class="food-body">
              <div class="d-flex menu-fd-img">
                <img src="assets/images/dish-6.jpg" id="menu-image" alt="" style="height: 150px; object-fit: cover" />
                <p id="menu-desc">
                  A small river named Duden flows by their place and supplies A small river named Duden flows by their place and supplies
                </p>
              </div>
            </div>
    
            <!-- Display Color Code (From Backend) -->
            <div class="color-code-display mt-3">
              <label for="menu-color-code">Color Code:</label>
              <div id="menu-color-code" style="display: flex; align-items: center;">
                <!-- Placeholder for Color Circle and Text -->
                <span id="menu-color-circle" style="display: inline-block; width: 12px; height: 12px; border-radius: 50%; margin-right: 8px;"></span>
                <span id="menu-color-text" style="font-size: 0.9rem;"></span>
              </div>
            </div>
    
            <div class="action-btn mt-3">
              <div class="food-quantity">
                <div class="input-group">
                  <span class="input-group-btn mr-2">
                    <button type="button" class="quantity-left-minus btn" data-type="minus" data-field="">
                      <i class="icon-minus"></i>
                    </button>
                  </span>
                  <input type="text" id="quantity" name="quantity" class="form-control input-number" value="1" min="1" max="100" />
                  <span class="input-group-btn ml-2">
                    <button type="button" class="quantity-right-plus btn" data-type="plus" data-field="">
                      <i class="icon-plus"></i>
                    </button>
                  </span>
                </div>
              </div>
              <div class="btn-like mt-3">
                <button type="button" onclick="deleteFromCart()" class="btn btn-primary btn-lg text-white border-gg">
                  Remove
                </button>
                <button type="button" onclick="addToCart()" class="btn btn-primary btn-lg text-white border-gg">
                  Add To Cart
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Modal for editing the menu before adding to the cart -->

    <section class="ftco-menu mb-3 pb-">
      <div class="container">
        <div class="row d-md-flex">
          <div class="col-lg-12 ftco-animate p-md-5">
            <div class="row">
              <div class="col-md-12 nav-link-wrap mb-5">
                <div class="nav ftco-animate nav-pills justify-content-center" id="v-pills-tab" role="tablist"
                  aria-orientation="vertical">
                  <a class="nav-link active" id="v-pills-1-tab" data-toggle="pill" href="#v-pills-1" role="tab"
                    aria-controls="v-pills-1" aria-selected="true">Breakfast</a>

                  <a class="nav-link" id="v-pills-2-tab" data-toggle="pill" href="#v-pills-2" role="tab"
                    aria-controls="v-pills-2" aria-selected="false">Lunch</a>

                  <a class="nav-link" id="v-pills-3-tab" data-toggle="pill" href="#v-pills-3" role="tab"
                    aria-controls="v-pills-3" aria-selected="false">Dinner</a>
                </div>
              </div>
              <div class="col-md-12">
                <div class="tab-content ftco-animate" id="v-pills-tabContent">
                  <div class="tab-pane fade show active" id="v-pills-1" role="tabpanel" aria-labelledby="v-pills-1-tab">
                    <div class="text text-center">
                      <h4>Our Breakfast Timing</h4>
                      <p id="breakfast-time"></p>
                    </div>
                    <div class="row" id="breakfast"></div>
                  </div>
                  <div class="tab-pane fade" id="v-pills-2" role="tabpanel" aria-labelledby="v-pills-2-tab">
                    <div class="text text-center">
                      <h4>Our Lunch Timing</h4>
                      <p id="lunch-time"></p>
                    </div>
                    <div class="row" id="lunch"></div>
                  </div>
                  <div class="tab-pane fade" id="v-pills-3" role="tabpanel" aria-labelledby="v-pills-3-tab">
                    <div class="text text-center">
                      <h4>Our Dinner Timing</h4>
                      <p id="dinner-time"></p>
                    </div>
                    <div class="row" id="dinner"></div>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
      </div>
      </div>
      </div>
    </section>

    <!-- =====================================
     footer part here
     ========================================= -->
    <%- include('partials/footer') %>
      <!-- =====================================
		 footer part here
		 ========================================= -->

      <!-- ======================================
	 loader
	 ========================================== -->
      <div id="ftco-loader" class="show fullscreen">
        <svg class="circular" width="48px" height="48px">
          <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
          <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10"
            stroke="#587440" />
        </svg>
      </div>
      <!-- ======================================
		 loader
		 ========================================== -->

      <!-- javascripts cdn here -->
      <script src="assets/js/jquery.min.js"></script>
      <script src="assets/js/jquery-migrate-3.0.1.min.js"></script>
      <script src="assets/js/popper.min.js"></script>
      <script src="assets/js/bootstrap.min.js"></script>
      <script src="assets/js/jquery.easing.1.3.js"></script>
      <script src="assets/js/jquery.waypoints.min.js"></script>
      <script src="assets/js/jquery.stellar.min.js"></script>
      <script src="assets/js/owl.carousel.min.js"></script>
      <script src="assets/js/jquery.magnific-popup.min.js"></script>
      <script src="assets/js/aos.js"></script>
      <script src="assets/js/jquery.animateNumber.min.js"></script>
      <script src="assets/js/bootstrap-datepicker.js"></script>
      <script src="assets/js/jquery.timepicker.min.js"></script>
      <script src="assets/js/scrollax.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

      <script src="https://md-aqil.github.io/images/swiper.min.js"></script>
      <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
      <script src="assets/js/google-map.js"></script>
      <script src="assets/js/star-rating.js"></script>
      <script src="assets/js/main.js"></script>

      <script>
        let menuData = [];
        let defacDetail = {};
        let selectedMenu = '';
        let selectedMenuQuantity = 1;
        let existingCart = {};
        let menuToAddCart = {};
        let cart = [];
        let timings = [];
        if (window.localStorage.getItem('cart')) {
          cart = JSON.parse(window.localStorage.getItem('cart'));
        }

        window.onload = () => {
          fetchDefacData().then(() => {
            fetchMenuData();
          });

          fetchTiming();

        };

        // fetch default defac detail
        async function fetchDefacData() {
          try {
            const accessToken = window.localStorage.getItem('accessToken');
            const apiKey = '<%= apiKey %>';
            const serverUrl = '<%= serverUrl %>';
            const myHeaders = new Headers();
            myHeaders.append('x-api-key', apiKey);
            myHeaders.append('Authorization', `Bearer ${accessToken}`);

            const requestOptions = {
              method: 'GET',
              headers: myHeaders,
              redirect: 'follow',
            };

            const response = await fetch(
              `${serverUrl}/api/defac/default`,
              requestOptions,
            );
            const result = await response.json();
            if (result?.statusCode === '10000') {
              defacDetail = result.data;
              renderDefacDetail();
            } else {
              console.error('Failed to fetch menu data: ', result.message);
            }
          } catch (error) {
            console.error('Error fetching menu data: ', error);
          }
        }

        // render defac detail
        const renderDefacDetail = () => {
          document.getElementById('contact').innerText = defacDetail?.contact;
          document.getElementById('address').innerText = defacDetail?.post;
          document.getElementById('opening-hour').innerText =
            `${defacDetail?.openingHour} - ${defacDetail?.closingHour}`;
        };

        // fetch menu item of default defac
        async function fetchMenuData() {
          try {
            const accessToken = window.localStorage.getItem('accessToken');
            const apiKey = '<%= apiKey %>';
            const serverUrl = '<%= serverUrl %>';
            const myHeaders = new Headers();
            myHeaders.append('x-api-key', apiKey);
            myHeaders.append('Authorization', `Bearer ${accessToken}`);

            const requestOptions = {
              method: 'GET',
              headers: myHeaders,
              redirect: 'follow',
            };

            const response = await fetch(
              `${serverUrl}/api/menu/defac`,
              requestOptions,
            );
            const result = await response.json();
            if (result?.statusCode === '10000') {
              menuData = result.data.menuList;
              renderMenuList();
            } else {
              console.error('Failed to fetch menu data: ', result.message);
            }
          } catch (error) {
            console.error('Error fetching menu data: ', error);
          }
        }

        // display menu on UI
        const renderMenuList = () => {
          const breakfastList = document.getElementById('breakfast');
          const lunchList = document.getElementById('lunch');
          const dinnerList = document.getElementById('dinner');

          const breakFastMenu = menuData?.filter(
            (food) => food.category.toLowerCase() === 'breakfast',
          );
          const lunchMenu = menuData?.filter(
            (food) => food.category.toLowerCase() === 'lunch',
          );
          const dinnerMenu = menuData?.filter(
            (food) => food.category.toLowerCase() === 'dinner',
          );

          breakfastList.innerHTML =
            breakFastMenu.length > 0
              ? breakFastMenu?.map(renderFood).join('')
              : `<div style="text-align: center; font-size: 20px; font-weight: 500; color: white; width: 100%;">No menu found</div>`;
          lunchList.innerHTML =
            lunchMenu.length > 0
              ? lunchMenu?.map(renderFood).join('')
              : `<div style="text-align: center; font-size: 20px; font-weight: 500; color: white; width: 100%;">No menu found</div>`;
          dinnerList.innerHTML =
            dinnerMenu.length > 0
              ? dinnerMenu?.map(renderFood).join('')
              : `<div style="text-align: center; font-size: 20px; font-weight: 500; color: white; width: 100%;">No menu found</div>`;
        };
        const renderFood = (menu, id) => {
  return `<div class="col-md-6">
    <div class="pricing-entry d-flex ftco-animate fadeInUp ftco-animated">
      <div class="img" style="background-image: url(${menu.menuUrl});"></div>
      
      <div class="desc pl-3">
        <div class="d-flex text align-items-center">
          <h3><span>${menu.name}</span></h3>
        </div>
        <div class="d-block">
          <p>${menu.description}</p>
        </div>
        
        <!-- Enhanced Color Code Indicator -->
        <div class="color-indicator my-2" style="display: flex; align-items: center;">
          <div style="position: relative; margin-right: 8px;">
            <span style="display: inline-block; width: 20px; height: 20px; border-radius: 50%; background-color: ${menu.colorCode.toLowerCase()}; border: 2px solid #fff; box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);"></span>
          </div>
          <span style="font-size: 0.9rem; font-weight: bold;">${menu.colorCode === 'Red' ? 'Red' : menu.colorCode === 'Green' ? 'Green' : 'Yellow'}</span>
        </div>
        
        <div class="add-dc">
          ${defacDetail.status
            ? `
            <button type="button" class="btn btn-primary btn-lg text-white border-gg"
              data-toggle="modal" data-target="#myModal-add-cart" 
              data-id="${menu._id}">
              <span class="icon-add"></span>
            </button>
            `
            : ``
          }
        </div>
      </div>
    </div>
  </div>`;
};

        // fetch monthly menu
        const fetchTiming = async () => {
          try {
            const accessToken = window.localStorage.getItem('accessToken');
            const apiKey = '<%= apiKey %>';
            const serverUrl = '<%= serverUrl %>';
            const myHeaders = new Headers();
            myHeaders.append('x-api-key', apiKey);
            myHeaders.append('Authorization', `Bearer ${accessToken}`);

            const requestOptions = {
              method: 'GET',
              headers: myHeaders,
              redirect: 'follow',
            };

            const response = await fetch(
              `${serverUrl}/api/timing/defaultDefac`,
              requestOptions,
            );
            const result = await response.json();
            if (result?.statusCode === '10000') {
              timings = result.data
              renderTiming();
            } else {
              alert('Failed to fetch data: ' + result.message);
            }
          } catch (err) {
            console.error(err);
          }
        }

        const renderTiming = () => {
          const breakfast = timings.find((item) => item.foodType.toLowerCase() === 'breakfast')
          const lunch = timings.find((item) => item.foodType.toLowerCase() === 'lunch')
          const dinner = timings.find((item) => item.foodType.toLowerCase() === 'dinner')


          const breakfastTime = document.getElementById('breakfast-time')
          const lunchTime = document.getElementById('lunch-time')
          const dinnerTime = document.getElementById('dinner-time')

          breakfastTime.innerText = `${breakfast?.openingHour} - ${breakfast?.closingHour}`
          lunchTime.innerText = `${lunch?.openingHour} - ${lunch?.closingHour}`
          dinnerTime.innerText = `${dinner?.openingHour} - ${dinner?.closingHour}`

        }

        // display menu in the cart
        document.addEventListener('click', function (event) {
          if (event.target.closest('.btn[data-target="#myModal-add-cart"]')) {
            selectedMenu = event.target.closest('button').getAttribute('data-id');

            // Find the menu details from the menus array or fetch from server
            menuToAddCart = menuData.find(
              (menu) => menu._id === selectedMenu,
            );
            if (menuToAddCart) {
              document.getElementById('myModalLabel').textContent =
                menuToAddCart.name;
              document.getElementById('menu-desc').textContent =
                menuToAddCart.description;
              document.getElementById('menu-image').src =
                `${menuToAddCart.menuUrl}`;
               // Set color code details
  const colorCircle = document.getElementById('menu-color-circle');
  const colorText = document.getElementById('menu-color-text');
  
  // Update color based on the backend color code
  colorCircle.style.backgroundColor = menuToAddCart.colorCode; // Update the color circle
  colorText.innerText = menuToAddCart.colorCode === 'Red' ? 'Red' 
                   : menuToAddCart.colorCode === 'Green' ? 'Green' 
                   : 'Yellow'; // Set the text accordingly
            }

            existingCart = cart.find((cartItem) => cartItem.id === selectedMenu);
            if (existingCart) {
              document.getElementById('quantity').value = existingCart.quantity;
              selectedMenuQuantity = existingCart.quantity;
            } else {
              document.getElementById('quantity').value = 1;
              selectedMenuQuantity = 1;
            }
          }
        });

        // store cart item in local storage
        const addToCart = () => {

          const cartItemCategory = timings?.find((data) => data.foodType.toLowerCase() === menuToAddCart.category.toLowerCase())
          if (cartItemCategory !== undefined) {
            const isOpen = isCurrentTimeBetween(cartItemCategory?.openingHour, cartItemCategory?.closingHour);
            if (isOpen) {
              // Check if the item already exists in the cart
              if (existingCart) {
                // Update the quantity of the existing item
                cart = cart.map((cartItem) => {
                  if (cartItem.id === selectedMenu) {
                    return { ...cartItem, quantity: selectedMenuQuantity };
                  }
                  return cartItem;
                });
              } else {
                // Add the new item to the cart
                const selectedMenuDefac = menuData.find((menu) => menu._id === selectedMenu);
                const defac = selectedMenuDefac.defac._id
                cart.push({ id: selectedMenu, quantity: selectedMenuQuantity, defac: defac });
              }

              // Save the updated cart to localStorage
              window.localStorage.setItem('cart', JSON.stringify(cart));
              alert('Menu added to cart!')
              window.location.reload()
            } else { alert(`You can't order this food at that time. This time is not for ${cartItemCategory.foodType}`) }
          } else {
            alert(`Defac has not added timing for ${menuToAddCart?.category}. Please ask your defac to add timing for ${menuToAddCart?.category}.`)
          }
        };

        // remove cart item from local storage
        const deleteFromCart = () => {
          cart = cart.filter((cartItem) => cartItem.id !== selectedMenu);

          if (confirm('Do you want to remove from cart!')) {
            window.localStorage.setItem('cart', JSON.stringify(cart));
            window.location.reload();
          }
        };

        // increase and decrease number of food
        $(document).ready(function () {
          $('.quantity-right-plus').click(function (e) {
            e.preventDefault();
            selectedMenuQuantity = parseInt($('#quantity').val()) + 1;
            $('#quantity').val(selectedMenuQuantity);
          });

          $('.quantity-left-minus').click(function (e) {
            e.preventDefault();
            selectedMenuQuantity = parseInt($('#quantity').val());
            if (selectedMenuQuantity > 1) {
              selectedMenuQuantity -= 1;
              $('#quantity').val(selectedMenuQuantity);
            }
          });
        });

        function isCurrentTimeBetween(openingHour, closingHour) {
          const now = moment(); // Current time
          const openingTime = moment(openingHour, 'h:mma'); // Parse opening time
          const closingTime = moment(closingHour, 'h:mma'); // Parse closing time

          // Handle case where closing time is after midnight
          if (closingTime.isBefore(openingTime)) {
            // Check if current time is between opening and midnight, or midnight and closing
            return now.isBetween(openingTime, moment('11:59pm', 'h:mma'), null, '[)') ||
              now.isBetween(moment('12:00am', 'h:mma'), closingTime, null, '[)');
          }

          // Normal case where closing time is after opening time on the same day
          return now.isBetween(openingTime, closingTime, null, '[)');
        }
      </script>
</body>

</html>